#include <stdio.h>
#include <string.h>

struct User {
    char username[100];
    char password[100];
    char name[100];
    char email[100];
    int age;
    char number[50];
};

struct Order {
};

struct Property {
    char type[50];
    char address[100];
    char city[50];
    int rooms, floor, area;
    float price;
};

struct Property availableProperties[100];

struct UserInfo currentUser;

void displayMenu() {
    printf("\n<===== MENU =====>\n");
    printf("1. Create Account\n");
    printf("2. Login\n");
    printf("3. View Account Info\n");
    printf("4. View Order History\n");
    printf("5. View Current Orders\n");
    printf("6. Search Property\n");
    printf("7. Display All Available Properties\n");
    printf("8. Rent Property\n");
    printf("9. Exit\n");
    printf("<================>\n");
}

void createAccount() {
    printf("\nEnter your username: ");
    scanf("%s", currentUser.username);
    printf("Enter your password: ");
    int i = 0;
    while (1) {
        currentUser.password[i] = getch();
        if(currentUser.password[i] == 13) {
            break;
        }
        else if (currentUser.password[i] == 8){
            if (i > 0){
                i--;
                printf("\b \b");
            }
        }
        else {
            printf("*");
        }
        i++;
    }
    currentUser.password[i] = '\0';
    printf("\nEnter your name: ");
    scanf("%s", currentUser.name);
    printf("Enter your email: ");
    scanf("%s", currentUser.email);
    printf("Enter your age: ");
    scanf("%d", currentUser.age);
    printf("Enter your phone number: ");
    scanf("%s", currentUser.number);
    printf("\nAccount created successfully!\n");
}

void login() {
}

void viewAccountInfo() {
}

void viewOrderHistory() {
}

void viewCurrentOrders() {
}

void allAvailableProperties() {
    strcpy(availableApartments[0].type, "Flat");
    strcpy(availableApartments[0].address, "4 Lipska st.");
    strcpy(availableApartments[0].city, "Kyiv");
    availableApartments[0].rooms = 2;
    availableApartments[0].area = 55;
    availableApartments[0].price = 14000.0;
    availableApartments[0].floor = 6;

    strcpy(availableApartments[1].type, "House");
    strcpy(availableApartments[1].address, "13 Jukovskogo st.");
    strcpy(availableApartments[1].city, "Lviv");
    availableApartments[1].rooms = 3;
    availableApartments[1].area = 137;
    availableApartments[1].price = 97350.0;

    strcpy(availableApartments[2].type, "House");
    strcpy(availableApartments[2].address, "25 Antonovycha st.");
    strcpy(availableApartments[2].city, "Lviv");
    availableApartments[2].rooms = 2;
    availableApartments[2].area = 96;
    availableApartments[2].price = 79450.0;

    strcpy(availableApartments[3].type, "Flat");
    strcpy(availableApartments[3].address, "7 Rozumovska st.");
    strcpy(availableApartments[3].city, "Odesa");
    availableApartments[3].rooms = 3;
    availableApartments[3].area = 70;
    availableApartments[3].price = 25500.0;
    availableApartments[3].floor = 3;

    strcpy(availableApartments[4].type, "Flat");
    strcpy(availableApartments[4].address, "10 Shyroka st.");
    strcpy(availableApartments[4].city, "Kyiv");
    availableApartments[4].rooms = 1;
    availableApartments[4].area = 40;
    availableApartments[4].price = 7500.0;
    availableApartments[4].floor = 8;

    strcpy(availableApartments[5].type, "House");
    strcpy(availableApartments[5].address, "26 Kovalska st.");
    strcpy(availableApartments[5].city, "Kharkiv");
    availableApartments[5].rooms = 5;
    availableApartments[5].area = 148;
    availableApartments[5].price = 110500.0;

    strcpy(availableApartments[6].type, "Flat");
    strcpy(availableApartments[6].address, "17 Yasna st.");
    strcpy(availableApartments[6].city, "Lviv");
    availableApartments[6].rooms = 2;
    availableApartments[6].area = 62;
    availableApartments[6].price = 13500.0;
    availableApartments[6].floor = 1;

    strcpy(availableApartments[7].type, "House");
    strcpy(availableApartments[7].address, "26 Dmytrivska st.");
    strcpy(availableApartments[7].city, "Kharkiv");
    availableApartments[7].rooms = 3;
    availableApartments[7].area = 108;
    availableApartments[7].price = 88500.0;

    strcpy(availableApartments[8].type, "House");
    strcpy(availableApartments[8].address, "44 Narodna st.");
    strcpy(availableApartments[8].city, "Kyiv");
    availableApartments[8].rooms = 3;
    availableApartments[8].area = 98;
    availableApartments[8].price = 86500.0;

    strcpy(availableApartments[9].type, "Flat");
    strcpy(availableApartments[9].address, "32 Zelena st.");
    strcpy(availableApartments[9].city, "Odesa");
    availableApartments[9].rooms = 2;
    availableApartments[9].area = 59;
    availableApartments[9].price = 12350.0;
    availableApartments[9].floor = 5;
}

void displayAvailableProperties() {
    printf("\n<=== AVAILABLE APARTMENTS ===>\n\n");
    for (int i = 0; i < sizeof(availableApartments) / sizeof(availableApartments[0]); i++){
        printf("Property %d\n", i + 1);
        printf("Type: %s\n", availableApartments[i].type);
        printf("Address: %s\n", availableApartments[i].address);
        printf("City: %s\n", availableApartments[i].city);
        printf("Floor: %d\n", availableApartments[i].floor);
        printf("Rooms: %d\n", availableApartments[i].rooms);
        printf("Area: %d\n", availableApartments[i].area);
        printf("Price for month: %.2f\n", availableApartments[i].price);
        printf("\n");
    }
}

void searchProperty() {
}

void viewPropertyDetails(struct Property availableProperties) {
}

void rentProperty() {
}

int main() {
    int choice;
    allAvailableApartments();
    do {
        displayMenu();
        printf("\nEnter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                createAccount();
                break;
            case 2:
                login();
                break;
            case 3:
                viewAccountInfo();
                break;
            case 4:
                viewOrderHistory();
                break;
            case 5:
                viewCurrentOrders();
                break;
            case 6:
                displayAvailableApartments();
                break;
            case 7:
                searchApartment();
                break;
            case 8:
                rentApartment();
                break;
            case 9:
                printf("Exiting the program...\n");
                break;
            default:
                printf("Invalid choice. Please try again.\n");
                break;
        }

    } while (choice != 9);
    return 0;
}
